@page "/portfolio"


@inject IStockPortfolioService StockPortfolioService
@*<table class="table table-striped" id="example">
        <thead class="thead-dark">
            <tr>
                <th>Symbol</th>
                <th>Company Name</th>
                <th>Dividend Yield</th>
                <th>Sector</th>
                <th>Ex-Dividend Date</th>
                <th>Total Invested</th>
            </tr>
        </thead>

        @foreach (var stocks in _portfolioList)
        {
            <tbody>
                <tr>
                    <td>@stocks.Symbol</td>
                    <td>@stocks.CompanyName</td>
                    <td>@stocks.DividendYield</td>
                    <td>@stocks.Sector</td>
                    <td>@stocks.ExDividendDate.ToString("MM/dd/yyyy")</td>
                    <td>$@stocks.TotalInvestment</td>

                </tr>
            </tbody>
        }

    </table>*@

<SfAccumulationChart Title="Company Stock Diversity">
    <AccumulationChartSeriesCollection>
        <AccumulationChartSeries DataSource="@_portfolioListCompany" XName="Symbol" YName="TotalInvestment"
                                 Name="Symbol">
        </AccumulationChartSeries>
    </AccumulationChartSeriesCollection>

    <AccumulationChartLegendSettings Visible="true"></AccumulationChartLegendSettings>
    <AccumulationChartTooltipSettings Enable="true" Format="${point.x} : <b>$${point.y}</b>"></AccumulationChartTooltipSettings>

</SfAccumulationChart>


@code {

    private IEnumerable<StockPortfolioViewModel> _portfolioListCompany = new List<StockPortfolioViewModel>();
    private IEnumerable<StockPortfolioViewModel> _portfolioListSector = new List<StockPortfolioViewModel>();

    protected override async Task OnInitializedAsync()
    {
        _portfolioListCompany = await StockPortfolioService.StockPortfolioGroupByCompany();
        _portfolioListSector = await StockPortfolioService.StockPortfolioGroupBySector();
    }


}
