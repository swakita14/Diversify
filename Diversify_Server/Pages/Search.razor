@page "/search"

@inject IStockSearchService Client

<h3>Search</h3>

<EditForm Model="@_searchModel" OnValidSubmit="@OnValidFormSubmission">
    <div class="row">
        <div class="col">
            <input type="text" class="form-control" placeholder="Company Name" @bind="_searchModel.CompanyName" />
        </div>
        <div class="col">
            <button type="submit" class="btn btn-outline-primary">Search</button>
        </div>
    </div>
</EditForm>
<br />

@if (!(_results is null))
{
    <table class="table table-striped">
        <thead class="thead-dark">
        <tr>
            <th>Symbol</th>
            <th>Name</th>
            <th></th>
        </tr>
        </thead>
        @foreach (var company in _results.BestMatches)
        {
            <tbody>
            <tr>

                <td>@company.Symbol</td>
                <td>@company.Name</td>
                <td>
                    <a href="/overview/@company.Symbol" class="btn btn-outline-info" role="button">Detail</a>
                    <a href="#link" class="btn btn-outline-success" role="button">Add Stock</a>
                </td>
            </tr>
            </tbody>
        }
    </table>
}


@code {

    private StockNewsSearchModel _searchModel;
    private SearchModelList _results;

    /**
     * Creates new model for the search
     */
    protected override void OnInitialized()
    {
        _searchModel = new StockNewsSearchModel();
    }


    /**
     * When form submitted, gets the user input and calls api method
     */
    private async Task OnValidFormSubmission()
    {
        await GetStockNews();
    }

    /*
     * Get the stock news api call result
     */
    public async Task GetStockNews()
    {
        _results = await Client.GetStockAsync(_searchModel.CompanyName);
    }
}


