@page "/search"
@using System.Runtime.CompilerServices

@inject IHttpClientFactory Client
@inject IConfiguration Configuration

<h3>Search</h3>

<!-- Search form -->
<input class="form-control" @onkeydown="KeyHandler" />
<br/>

@if ((_isFound) && _results.BestMatches!=null)
{
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>Symbol</th>
                <th>Name</th>
                <th>Type</th>
            </tr>
        </thead>
        @foreach (var company in _results.BestMatches)
        {
            <tbody>
                <tr>

                    <td>@company.Symbol</td>
                    <td>@company.Name</td>
                    <td>@company.Type</td>

                </tr>
            </tbody>
        }
    </table>
}


@code {

    int _count;
    bool _isFound = false;
    string _searchString;
    string _errorMessage;
    SearchModelList _results;

    /**
     * Method to handle the keypress events to dynamically search
     */
    private void KeyHandler(KeyboardEventArgs e)
    {
        // If backspace is pressed subtract from the count and remove logged string
        if (e.Key.Equals("Backspace"))
        {
            // Subtract string if there are any
            if (string.IsNullOrWhiteSpace(_searchString) == false)
            {
                _searchString = _searchString.Remove(_searchString.Length - 1);
                _searchString += "";
                _count = _searchString.Length;
                if (_searchString.Length >= 2)
                {
                    GetCompanyList(_searchString);
                }


            }

        }
        else if (e.Key.Equals("Shift"))
        {
            // Don't capture shift key as well
            _searchString += "";
        }
        else
        {
            // Log the string for search
            _searchString += e.Key;
            _count = _searchString.Length;
            if (_searchString.Length >= 2)
            {
                GetCompanyList(_searchString);
            }

        }
    }


    /**
     * Get the list of company using the keyword
     */
    private async void GetCompanyList(string keyword)
    {
        // Create client
        var client = Client.CreateClient("alphaVantage");

        // Call the API with the parameter
        try
        {
            _results = await client.GetFromJsonAsync<SearchModelList>($"query?function=SYMBOL_SEARCH&keywords={keyword}&apikey={Configuration["StockApi:ApiKey"]}");
            _errorMessage = null;
            _isFound = true;

        }
        catch (Exception ex)
        {
            _errorMessage = $"There was an error getting the company overview data: {ex.Message}";
        }
    }


}
