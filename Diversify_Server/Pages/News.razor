@page "/news"

@inject ICompanyNewsService Client

<h3>News</h3>

<EditForm Model="@_searchModel" OnValidSubmit="@OnValidFormSubmission">
    <div class="row">
        <div class="col">
            <input type="text" class="form-control" placeholder="Company Name" @bind="_searchModel.CompanyName" />
        </div>
        <div class="col">
            <button type="submit" class="btn btn-outline-primary">Search</button>
        </div>
    </div>
</EditForm>
<br />


@if (!(_results is null))
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Description</th>
                <th>Published</th>
                <th>Link</th>
            </tr>
        </thead>
        @foreach (var company in _results.Articles)
        {
            <tbody>
                <tr>

                    <td>@company.Title</td>
                    <td>@company.Author</td>
                    <td>@company.Description</td>
                    <td>@company.PublishedAt</td>
                    <td><a href="@company.Url">Link</a></td>

                </tr>
            </tbody>
        }
    </table>
}




@code {

    private StockNewsSearchModel _searchModel;
    private NewsSearchResult _results;

    /**
     * Creates new model for the search
     */
    protected override void OnInitialized()
    {
        _searchModel = new StockNewsSearchModel();
    }

    /**
     * When form submitted, gets the user input and calls api method 
     */
    private async Task OnValidFormSubmission()
    {
        await GetStockNews();
    }

    /*
     * Get the stock news api call result
     */
    public async Task GetStockNews()
    {
        _results = await Client.GetCompanyNewsAsync(_searchModel.CompanyName);
    }

}
