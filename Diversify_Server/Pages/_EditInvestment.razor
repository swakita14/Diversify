
@inject IInvestmentTotalService InvestmentTotalService
@inject IStockPortfolioService StockPortfolioService
@inject NavigationManager NavigationManager


<div class="card" style="width: 20rem;">
    <div class="card-body">
        <h5 class="card-title">Manage @ExistingStock.Symbol</h5>
        <EditForm Model="@ExistingStock" OnValidSubmit="() => SellStockAsync(ExistingStock.Symbol,_editAmount)">
            <h6 class="card-subtitle mb-2 text-muted">Amount Sold</h6>
            <InputNumber @bind-Value=_editAmount class="form-control col-sm-3" id="sold-amount" />
            <br>
            <p>
                @if (_success)
                {
                    <span class="oi oi-check" aria-hidden="true">Stocks Sold!</span>
                }
                @if (_error)
                {
                    <span class="oi oi-circle-x" aria-hidden="true">Something went wrong..</span>
                }
            </p>
            <button type="submit" class="btn btn-primary">Sell Stock</button>
        </EditForm>
    </div>
</div>



@code {

    [Parameter]
    public Stock ExistingStock { get; set; }

    private decimal _editAmount = 0;

    private bool _success = false;
    private bool _error = false;

    public async Task SellStockAsync(string companySymbol, decimal amount)
    {
        if (await InvestmentTotalService.CheckRemainderInvestment(companySymbol, amount) && amount > 0)
        {
            await StockPortfolioService.SellStock(companySymbol, -amount, DateTime.Now);

            _error = false;
            _success = true;

            NavigationManager.NavigateTo($"editinvestment/{companySymbol}", true);

        }
        else
        {
            _error = true;
        }
        StateHasChanged();
    }

}
